{
  "version": 3,
  "sources": ["../../spin.js/spin.js"],
  "sourcesContent": ["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign(__assign({}, defaults), opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n"],
  "mappings": "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",
  "names": ["Spinner"]
}
